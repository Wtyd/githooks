name: Production CI
# https://github.com/shivammathur/setup-php
on:
  push:
    branches: [ master ] 
  pull_request:
    branches: [ master ]

env:
  extensions: mbstring #intl, pcov
jobs:
  code_analysis:    
    runs-on: ubuntu-latest
    name: ${{ matrix.tool }} Code Analysis
    strategy:
      matrix:
        tool: [phpcs, phpmd, phpstan]
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Install PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '7.4'
        tools: prestissimo, ${{ matrix.tool }}

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress --no-suggest
      if: ${{ 'phpstan' == matrix.tool }}

    - name: Execute Php Code Sniffer
      run: ${{ matrix.tool }} --standard=./qa/psr12-ruleset.xml ./src
      if: ${{ 'phpcs' == matrix.tool }}

    - name: Execute Php Mess Detector
      run: ${{ matrix.tool }} ./ text ./qa/phpmd-src-ruleset.xml
      if: ${{ 'phpmd' == matrix.tool }}

    - name: Execute Php Stan
      run: ${{ matrix.tool }} analyse -c ./qa/phpstan-phpqa.neon --no-progress -n -l 8 ./src
      if: ${{ 'phpstan' == matrix.tool }}

  tests:    
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        php-versions: ['7.2', '7.3', '7.4']
    name: PHP ${{ matrix.php-versions }} Test on ${{ matrix.os }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Install PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-versions }}
        extensions: ${{ env.extensions }} #optional
        tools: prestissimo, phpcs, phpcbf, phpmd, phpstan, phpcpd
        ini-values: "post_max_size=256M" #optional
        coverage: none
        
    - name: Install dependencies
      run: composer install --prefer-dist --no-progress --no-suggest

    - name: Install Parallel-Lint
      run: composer global require php-parallel-lint/php-parallel-lint

    - name: Export path
      run: echo "::add-path::$(composer -q global config home)/vendor/bin"

    - name: Install Phpcpd Unix
      run:   wget -O phpcpd.phar https://phar.phpunit.de/phpcpd-3.0.1.phar
      if: ${{ '7.2' == matrix.php-versions && ('ubuntu-latest' == matrix.os || 'macos-latest' == matrix.os)}}

    - name: Install Phpcpd Windows
      run:   curl -o phpcpd.phar https://phar.phpunit.de/phpcpd-3.0.1.phar
      if: ${{ '7.2' == matrix.php-versions && 'windows-latest' == matrix.os}}

    - name: Testing the Aplication
      run: vendor/bin/phpunit
